// Script para verificar o estado do login e permiss√µes
console.log('üîç VERIFICANDO LOGIN E PERMISS√ïES')

// Verificar localStorage
const verificarLogin = () => {
  console.log('üìã === VERIFICA√á√ÉO DE LOGIN ===')
  
  // Verificar se h√° dados no localStorage
  const usuarioLogado = localStorage.getItem('usuarioLogado')
  console.log('üì¶ Dados do localStorage:', usuarioLogado)
  
  if (!usuarioLogado) {
    console.log('‚ùå NENHUM USU√ÅRIO LOGADO')
    console.log('üí° Solu√ß√£o: Fa√ßa login como administrador')
    return false
  }
  
  try {
    const dados = JSON.parse(usuarioLogado)
    console.log('üë§ Dados do usu√°rio:', dados)
    
    if (!dados) {
      console.log('‚ùå DADOS INV√ÅLIDOS')
      return false
    }
    
    if (!dados.tipo) {
      console.log('‚ùå TIPO DE USU√ÅRIO N√ÉO DEFINIDO')
      return false
    }
    
    if (dados.tipo !== 'admin') {
      console.log('‚ùå USU√ÅRIO N√ÉO √â ADMIN:', dados.tipo)
      console.log('üí° Solu√ß√£o: Fa√ßa login com uma conta de administrador')
      return false
    }
    
    console.log('‚úÖ USU√ÅRIO √â ADMIN - ACESSO PERMITIDO')
    return true
  } catch (error) {
    console.error('‚ùå ERRO AO PARSEAR DADOS:', error)
    return false
  }
}

// Verificar URL atual
const verificarURL = () => {
  console.log('üåê === VERIFICA√á√ÉO DE URL ===')
  const url = window.location.href
  console.log('üìç URL atual:', url)
  
  if (url.includes('/admin/admins/cadastrar')) {
    console.log('‚úÖ URL correta para cadastro de admin')
  } else {
    console.log('‚ö†Ô∏è URL n√£o √© para cadastro de admin')
  }
}

// Verificar se o componente est√° carregado
const verificarComponente = () => {
  console.log('üß© === VERIFICA√á√ÉO DE COMPONENTE ===')
  
  // Verificar se h√° elementos do formul√°rio
  const formulario = document.querySelector('form')
  const inputs = document.querySelectorAll('input')
  const botoes = document.querySelectorAll('button')
  
  console.log('üìù Formul√°rio encontrado:', !!formulario)
  console.log('‚å®Ô∏è Inputs encontrados:', inputs.length)
  console.log('üîò Bot√µes encontrados:', botoes.length)
  
  // Verificar se h√° elementos espec√≠ficos do admin
  const adminElements = document.querySelectorAll('[class*="admin"], [class*="Admin"]')
  console.log('üõ°Ô∏è Elementos de admin encontrados:', adminElements.length)
}

// Executar verifica√ß√µes
console.log('üöÄ === INICIANDO VERIFICA√á√ïES ===')

const loginOk = verificarLogin()
verificarURL()
verificarComponente()

// Resultado final
console.log('üìä === RESULTADO FINAL ===')
if (loginOk) {
  console.log('‚úÖ LOGIN OK - O problema pode ser:')
  console.log('  1. Componente n√£o carregou')
  console.log('  2. Erro de JavaScript')
  console.log('  3. Problema de roteamento')
} else {
  console.log('‚ùå LOGIN PROBLEM√ÅTICO - Solu√ß√µes:')
  console.log('  1. Fa√ßa login como administrador')
  console.log('  2. Verifique se a conta √© admin')
  console.log('  3. Limpe o localStorage e fa√ßa login novamente')
}

// Comandos √∫teis
console.log('üõ†Ô∏è === COMANDOS √öTEIS ===')
console.log('Para limpar localStorage: localStorage.clear()')
console.log('Para ver dados: localStorage.getItem("usuarioLogado")')
console.log('Para recarregar: window.location.reload()') 