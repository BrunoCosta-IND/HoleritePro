-- =====================================================
-- CORRE√á√ÉO DOS ERROS 406 - SUPABASE
-- =====================================================

-- 1. VERIFICAR TABELAS PRINCIPAIS
DO $$ 
BEGIN
  RAISE NOTICE '=== VERIFICANDO TABELAS PRINCIPAIS ===';
  
  -- Verificar se tabela funcionarios existe
  IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'funcionarios') THEN
    RAISE NOTICE '‚úÖ Tabela funcionarios existe';
  ELSE
    RAISE NOTICE '‚ùå Tabela funcionarios N√ÉO existe';
  END IF;
  
  -- Verificar se tabela holerite existe
  IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'holerite') THEN
    RAISE NOTICE '‚úÖ Tabela holerite existe';
  ELSE
    RAISE NOTICE '‚ùå Tabela holerite N√ÉO existe';
  END IF;
  
  -- Verificar se tabela empresa_config existe
  IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'empresa_config') THEN
    RAISE NOTICE '‚úÖ Tabela empresa_config existe';
  ELSE
    RAISE NOTICE '‚ùå Tabela empresa_config N√ÉO existe';
  END IF;
  
  -- Verificar se tabela webhook_config existe
  IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'webhook_config') THEN
    RAISE NOTICE '‚úÖ Tabela webhook_config existe';
  ELSE
    RAISE NOTICE '‚ùå Tabela webhook_config N√ÉO existe';
  END IF;
  
  -- Verificar se tabela funcionalidades_pro existe
  IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'funcionalidades_pro') THEN
    RAISE NOTICE '‚úÖ Tabela funcionalidades_pro existe';
  ELSE
    RAISE NOTICE '‚ùå Tabela funcionalidades_pro N√ÉO existe';
  END IF;
  
  -- Verificar se tabela uploads_historico existe
  IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'uploads_historico') THEN
    RAISE NOTICE '‚úÖ Tabela uploads_historico existe';
  ELSE
    RAISE NOTICE '‚ùå Tabela uploads_historico N√ÉO existe';
  END IF;
END $$;

-- 2. DESABILITAR RLS TEMPORARIAMENTE PARA TESTE
DO $$ 
BEGIN
  RAISE NOTICE '=== DESABILITANDO RLS PARA TESTE ===';
  
  -- Desabilitar RLS em todas as tabelas principais
  ALTER TABLE funcionarios DISABLE ROW LEVEL SECURITY;
  ALTER TABLE holerite DISABLE ROW LEVEL SECURITY;
  ALTER TABLE empresa_config DISABLE ROW LEVEL SECURITY;
  ALTER TABLE webhook_config DISABLE ROW LEVEL SECURITY;
  ALTER TABLE funcionalidades_pro DISABLE ROW LEVEL SECURITY;
  ALTER TABLE uploads_historico DISABLE ROW LEVEL SECURITY;
  
  RAISE NOTICE '‚úÖ RLS desabilitado em todas as tabelas';
END $$;

-- 3. CRIAR POL√çTICAS PERMISSIVAS
DO $$ 
BEGIN
  RAISE NOTICE '=== CRIANDO POL√çTICAS PERMISSIVAS ===';
  
  -- Pol√≠ticas para funcionarios
  DROP POLICY IF EXISTS "Public Access" ON funcionarios;
  CREATE POLICY "Public Access" ON funcionarios FOR ALL USING (true);
  
  -- Pol√≠ticas para holerite
  DROP POLICY IF EXISTS "Public Access" ON holerite;
  CREATE POLICY "Public Access" ON holerite FOR ALL USING (true);
  
  -- Pol√≠ticas para empresa_config
  DROP POLICY IF EXISTS "Public Access" ON empresa_config;
  CREATE POLICY "Public Access" ON empresa_config FOR ALL USING (true);
  
  -- Pol√≠ticas para webhook_config
  DROP POLICY IF EXISTS "Public Access" ON webhook_config;
  CREATE POLICY "Public Access" ON webhook_config FOR ALL USING (true);
  
  -- Pol√≠ticas para funcionalidades_pro
  DROP POLICY IF EXISTS "Public Access" ON funcionalidades_pro;
  CREATE POLICY "Public Access" ON funcionalidades_pro FOR ALL USING (true);
  
  -- Pol√≠ticas para uploads_historico
  DROP POLICY IF EXISTS "Public Access" ON uploads_historico;
  CREATE POLICY "Public Access" ON uploads_historico FOR ALL USING (true);
  
  RAISE NOTICE '‚úÖ Pol√≠ticas permissivas criadas';
END $$;

-- 4. REABILITAR RLS
DO $$ 
BEGIN
  RAISE NOTICE '=== REABILITANDO RLS ===';
  
  ALTER TABLE funcionarios ENABLE ROW LEVEL SECURITY;
  ALTER TABLE holerite ENABLE ROW LEVEL SECURITY;
  ALTER TABLE empresa_config ENABLE ROW LEVEL SECURITY;
  ALTER TABLE webhook_config ENABLE ROW LEVEL SECURITY;
  ALTER TABLE funcionalidades_pro ENABLE ROW LEVEL SECURITY;
  ALTER TABLE uploads_historico ENABLE ROW LEVEL SECURITY;
  
  RAISE NOTICE '‚úÖ RLS reabilitado';
END $$;

-- 5. VERIFICAR DADOS DE CONFIGURA√á√ÉO
DO $$ 
BEGIN
  RAISE NOTICE '=== VERIFICANDO DADOS DE CONFIGURA√á√ÉO ===';
  
  -- Verificar empresa_config
  IF EXISTS (SELECT 1 FROM empresa_config LIMIT 1) THEN
    RAISE NOTICE '‚úÖ empresa_config tem dados';
  ELSE
    RAISE NOTICE '‚ö†Ô∏è empresa_config vazia - inserindo dados padr√£o';
    INSERT INTO empresa_config (nome, cor_botoes, created_at, updated_at) 
    VALUES ('Sistema de Gest√£o de Holerites', '#3b82f6', NOW(), NOW());
  END IF;
  
  -- Verificar webhook_config
  IF EXISTS (SELECT 1 FROM webhook_config LIMIT 1) THEN
    RAISE NOTICE '‚úÖ webhook_config tem dados';
  ELSE
    RAISE NOTICE '‚ö†Ô∏è webhook_config vazia - inserindo dados padr√£o';
    INSERT INTO webhook_config (url, ativo, eventos, created_at, updated_at) 
    VALUES ('', false, '{}', NOW(), NOW());
  END IF;
  
  -- Verificar funcionalidades_pro
  IF EXISTS (SELECT 1 FROM funcionalidades_pro LIMIT 1) THEN
    RAISE NOTICE '‚úÖ funcionalidades_pro tem dados';
  ELSE
    RAISE NOTICE '‚ö†Ô∏è funcionalidades_pro vazia - inserindo dados padr√£o';
    INSERT INTO funcionalidades_pro (webhook_whatsapp, relatorio_assinaturas, created_at, updated_at) 
    VALUES (false, false, NOW(), NOW());
  END IF;
  
END $$;

-- 6. TESTE DE CONEX√ÉO
DO $$ 
BEGIN
  RAISE NOTICE '=== TESTE DE CONEX√ÉO ===';
  
  -- Testar SELECT em funcionarios
  PERFORM COUNT(*) FROM funcionarios;
  RAISE NOTICE '‚úÖ SELECT funcionarios OK';
  
  -- Testar SELECT em holerite
  PERFORM COUNT(*) FROM holerite;
  RAISE NOTICE '‚úÖ SELECT holerite OK';
  
  -- Testar SELECT em empresa_config
  PERFORM COUNT(*) FROM empresa_config;
  RAISE NOTICE '‚úÖ SELECT empresa_config OK';
  
  -- Testar SELECT em webhook_config
  PERFORM COUNT(*) FROM webhook_config;
  RAISE NOTICE '‚úÖ SELECT webhook_config OK';
  
  -- Testar SELECT em funcionalidades_pro
  PERFORM COUNT(*) FROM funcionalidades_pro;
  RAISE NOTICE '‚úÖ SELECT funcionalidades_pro OK';
  
  -- Testar SELECT em uploads_historico
  PERFORM COUNT(*) FROM uploads_historico;
  RAISE NOTICE '‚úÖ SELECT uploads_historico OK';
  
END $$;

RAISE NOTICE 'üéØ CORRE√á√ÉO CONCLU√çDA! Teste o sistema agora.'; 